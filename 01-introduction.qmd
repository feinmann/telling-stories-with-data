---
title: "01-Introduction"
format: html
editor: visual
bibliography: references.bib
---

# 01-Introduction

> And finally, for writing, it would be best to turn inward. Force yourself to write and publish every day for a month. Then do it again and again. You will get better. That said, there are some useful books, including *Working* ([Caro 2019](https://tellingstorieswithdata.com/99-references.html#ref-caroonworking)) and *On Writing: A Memoir of the Craft* ([King 2000](https://tellingstorieswithdata.com/99-references.html#ref-stephenking)).

This quote stems from the excellent book `Telling Stories with Data` by @Alexander2023 . So far, I was only reading the preface and the last chapter, where I found this advice of how to improve ones writing. So, this brings me to writing this very text. I am planning to write something about myself the coming days and hope to

1.  improve my writing
2.  order my thoughts
3.  learn something new

And as I am not a native English speaker, I hope to improve my English writing, but also my writing in general (also my German one).

## About myself

My background is biophysics, which I studied five years until 2012. During this time I started my data analysis career in Excel, quickly changing to Origin, gnuplot, Maple and finally sticking for a while to Mathematica, which I quite liked. I loved to tune my plots exactly to my needs although it took a very long time and produced many lines of code. I was fascinated by the notebook way of working and later found out that it inspired ipython and jupyter developers, in this article in the Atlantic by @somers2018 and also liked the comment by Paul @romer2018 . When I was working on my final thesis, in the last year of my studies, I came into contact with python, matplotlib and ipython. I felt immediately in love with ipython notebooks which were brand new then. I really thought it is clever to use the browser to show a beautiful interface to conduct an analysis. And everything without the hassle of licences due to open source. It is magical.

Today we have all this awesome jupyter notebooks, jupyterlab and add-ins, and also very new ideas like the Pluto notebooks for the programming language `Julia`, that provide reactivity between different cells, so when you change one cell, other cells that depend on it get reevaluated automatically.

I have to admit that I am better working in a well defined structure using script files, like developing `R` packages, for instance. Or the cookiecutter data-science template folder structure. That is because in a notebook I cannot really stick to order and also forget which cells were already executed. So, notebooks for me are to much freedom, I guess. But it took some years to figure that out. Nonetheless I think notebooks are pretty amazing for quick prototyping and then transferring the functions to script files. And there is an add-in for that.
